Version control

doc1.docx

Git --> Version control system
GitHUb --> Source Code Management / Online Code Repo --> Remote Repo

Why VCS?
1. To track changes --> who commited the changes? what was changed? --> commit ID
2. To retrieve files from accidental deletes

Types of VCS
1. Centralized VCS --> svn (sub-version)
  Drawbacks:
    a. Multiple developers cann't work on the same files/project at the same time
    b. To make changes, developers need to be connected to the internet

2. Distributed VCS --> Git
    Local Repo

=============================================================================================
ls -la --> list the hideen files/folder --> To check whether the folder is being tracked by git or not
ls -l --> WD
git ls-files --> SA/LR 
git status --> To confirm SA or LR

SA (Staging Area) is a temporary Location
git log (shows all the commits)
git log --oneline (same as "got log" but shows only one line)
git show <commit ID> (To show the content of the commit change)
git remote -v (To show what is configured as a remote repo)
git remote add origin https://github.com/ahmedsho/DEVOPS-2024.git (To add a remote repo)
git push origin master (To push commit to origin in Github)
Under profile => Settings => Developer Settings => Personal Access Token => Generate new token
